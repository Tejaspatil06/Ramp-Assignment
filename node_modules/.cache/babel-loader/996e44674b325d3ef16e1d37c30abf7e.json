{"ast":null,"code":"var _jsxFileName = \"/Users/tejaspatil/Downloads/ramp-fe-challenge-2/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { usePaginatedTransactions } from \"./hooks/usePaginatedTransactions\";\nimport { useCustomFetch } from \"./hooks/useCustomFetch\";\nimport InputSelect from \"./components/InputSelect\";\nimport Transactions from \"./components/Transactions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EMPTY_EMPLOYEE = {\n  id: \"\",\n  firstName: \"All\",\n  lastName: \"Employees\"\n};\n\nconst App = () => {\n  _s();\n\n  const {\n    data: paginatedTransactions,\n    loading: loadingTransactions,\n    fetchAll,\n    invalidateData\n  } = usePaginatedTransactions();\n  const {\n    fetchWithCache\n  } = useCustomFetch();\n  const [employees, setEmployees] = useState(null);\n  const [loadingEmployees, setLoadingEmployees] = useState(true);\n  const [transactions, setTransactions] = useState(null);\n  useEffect(() => {\n    const loadEmployees = async () => {\n      setLoadingEmployees(true);\n      const response = await fetchWithCache(\"employees\");\n      setEmployees(response);\n      setLoadingEmployees(false);\n    };\n\n    loadEmployees();\n  }, [fetchWithCache]);\n\n  const loadAllTransactions = async () => {\n    const response = await fetchWithCache(\"transactions\");\n    setTransactions(response);\n  };\n\n  const loadTransactionsByEmployee = async employeeId => {\n    const response = await fetchWithCache(`transactions?employeeId=${employeeId}`);\n    setTransactions(response);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(InputSelect, {\n      isLoading: loadingEmployees,\n      defaultValue: EMPTY_EMPLOYEE,\n      items: employees === null ? [] : [EMPTY_EMPLOYEE, ...employees],\n      label: \"Filter by employee\",\n      loadingLabel: \"Loading employees\",\n      parseItem: item => ({\n        value: item.id,\n        label: `${item.firstName} ${item.lastName}`\n      }),\n      onChange: async newValue => {\n        if (newValue === null) {\n          return;\n        }\n\n        if (newValue.id === EMPTY_EMPLOYEE.id) {\n          await loadAllTransactions();\n        } else {\n          await loadTransactionsByEmployee(newValue.id);\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"RampBreak--l\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"RampGrid\",\n      children: [/*#__PURE__*/_jsxDEV(Transactions, {\n        transactions: transactions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), transactions !== null && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"RampButton\",\n        disabled: loadingTransactions,\n        onClick: async () => {\n          await fetchAll();\n        },\n        children: \"View More\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"/vJKd5Ni4E9GtDS6j74YvVI2kQc=\", false, function () {\n  return [usePaginatedTransactions, useCustomFetch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","usePaginatedTransactions","useCustomFetch","InputSelect","Transactions","EMPTY_EMPLOYEE","id","firstName","lastName","App","data","paginatedTransactions","loading","loadingTransactions","fetchAll","invalidateData","fetchWithCache","employees","setEmployees","loadingEmployees","setLoadingEmployees","transactions","setTransactions","loadEmployees","response","loadAllTransactions","loadTransactionsByEmployee","employeeId","item","value","label","newValue"],"sources":["/Users/tejaspatil/Downloads/ramp-fe-challenge-2/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport { usePaginatedTransactions } from \"./hooks/usePaginatedTransactions\"\nimport { useCustomFetch } from \"./hooks/useCustomFetch\"\nimport { Employee, Transaction } from \"./utils/types\"\nimport InputSelect from \"./components/InputSelect\"\nimport Transactions from \"./components/Transactions\"\n\nconst EMPTY_EMPLOYEE = { id: \"\", firstName: \"All\", lastName: \"Employees\" }\n\nconst App: React.FC = () => {\n  const { data: paginatedTransactions, loading: loadingTransactions, fetchAll, invalidateData } = usePaginatedTransactions()\n  const { fetchWithCache } = useCustomFetch()\n  const [employees, setEmployees] = useState<Employee[] | null>(null)\n  const [loadingEmployees, setLoadingEmployees] = useState<boolean>(true)\n  const [transactions, setTransactions] = useState<Transaction[] | null>(null)\n\n  useEffect(() => {\n    const loadEmployees = async () => {\n      setLoadingEmployees(true)\n      const response = await fetchWithCache<Employee[]>(\"employees\")\n      setEmployees(response)\n      setLoadingEmployees(false)\n    }\n\n    loadEmployees()\n  }, [fetchWithCache])\n\n  const loadAllTransactions = async () => {\n    const response = await fetchWithCache<Transaction[]>(\"transactions\")\n    setTransactions(response)\n  }\n\n  const loadTransactionsByEmployee = async (employeeId: string) => {\n    const response = await fetchWithCache<Transaction[]>(`transactions?employeeId=${employeeId}`)\n    setTransactions(response)\n  }\n\n  return (\n    <div>\n      <InputSelect<Employee>\n        isLoading={loadingEmployees}\n        defaultValue={EMPTY_EMPLOYEE}\n        items={employees === null ? [] : [EMPTY_EMPLOYEE, ...employees]}\n        label=\"Filter by employee\"\n        loadingLabel=\"Loading employees\"\n        parseItem={(item) => ({\n          value: item.id,\n          label: `${item.firstName} ${item.lastName}`,\n        })}\n        onChange={async (newValue) => {\n          if (newValue === null) {\n            return\n          }\n\n          if (newValue.id === EMPTY_EMPLOYEE.id) {\n            await loadAllTransactions()\n          } else {\n            await loadTransactionsByEmployee(newValue.id)\n          }\n        }}\n      />\n\n      <div className=\"RampBreak--l\" />\n\n      <div className=\"RampGrid\">\n        <Transactions transactions={transactions} />\n\n        {transactions !== null && (\n          <button\n            className=\"RampButton\"\n            disabled={loadingTransactions}\n            onClick={async () => {\n              await fetchAll()\n            }}\n          >\n            View More\n          </button>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module"}